function cov_1c0z5cemvg(){var path="/Users/deepgill/CPSC-319/TerraScanBackEnd/amplify/backend/function/webhook/src/github/index.js";var hash="06c2ecf555e012b00fb791aa83b12985d71ba233";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/deepgill/CPSC-319/TerraScanBackEnd/amplify/backend/function/webhook/src/github/index.js",statementMap:{"0":{start:{line:1,column:14},end:{line:1,column:30}},"1":{start:{line:2,column:22},end:{line:2,column:54}},"2":{start:{line:14,column:25},end:{line:34,column:1}},"3":{start:{line:15,column:4},end:{line:15,column:52}},"4":{start:{line:15,column:18},end:{line:15,column:52}},"5":{start:{line:16,column:48},end:{line:16,column:55}},"6":{start:{line:18,column:20},end:{line:20,column:5}},"7":{start:{line:21,column:4},end:{line:23,column:5}},"8":{start:{line:22,column:8},end:{line:22,column:68}},"9":{start:{line:24,column:16},end:{line:24,column:75}},"10":{start:{line:25,column:4},end:{line:25,column:54}},"11":{start:{line:25,column:45},end:{line:25,column:54}},"12":{start:{line:26,column:4},end:{line:26,column:97}},"13":{start:{line:26,column:31},end:{line:26,column:97}},"14":{start:{line:28,column:20},end:{line:28,column:56}},"15":{start:{line:28,column:46},end:{line:28,column:55}},"16":{start:{line:30,column:4},end:{line:32,column:5}},"17":{start:{line:31,column:8},end:{line:31,column:80}},"18":{start:{line:31,column:45},end:{line:31,column:79}},"19":{start:{line:33,column:4},end:{line:33,column:20}},"20":{start:{line:44,column:28},end:{line:48,column:1}},"21":{start:{line:45,column:54},end:{line:45,column:60}},"22":{start:{line:46,column:4},end:{line:46,column:92}},"23":{start:{line:46,column:36},end:{line:46,column:92}},"24":{start:{line:47,column:4},end:{line:47,column:101}},"25":{start:{line:50,column:0},end:{line:53,column:1}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:14,column:25},end:{line:14,column:26}},loc:{start:{line:14,column:58},end:{line:34,column:1}},line:14},"1":{name:"(anonymous_1)",decl:{start:{line:28,column:38},end:{line:28,column:39}},loc:{start:{line:28,column:46},end:{line:28,column:55}},line:28},"2":{name:"(anonymous_2)",decl:{start:{line:31,column:37},end:{line:31,column:38}},loc:{start:{line:31,column:45},end:{line:31,column:79}},line:31},"3":{name:"(anonymous_3)",decl:{start:{line:44,column:28},end:{line:44,column:29}},loc:{start:{line:44,column:45},end:{line:48,column:1}},line:44}},branchMap:{"0":{loc:{start:{line:14,column:41},end:{line:14,column:53}},type:"default-arg",locations:[{start:{line:14,column:51},end:{line:14,column:53}}],line:14},"1":{loc:{start:{line:15,column:4},end:{line:15,column:52}},type:"if",locations:[{start:{line:15,column:4},end:{line:15,column:52}},{start:{line:15,column:4},end:{line:15,column:52}}],line:15},"2":{loc:{start:{line:21,column:4},end:{line:23,column:5}},type:"if",locations:[{start:{line:21,column:4},end:{line:23,column:5}},{start:{line:21,column:4},end:{line:23,column:5}}],line:21},"3":{loc:{start:{line:25,column:4},end:{line:25,column:54}},type:"if",locations:[{start:{line:25,column:4},end:{line:25,column:54}},{start:{line:25,column:4},end:{line:25,column:54}}],line:25},"4":{loc:{start:{line:25,column:8},end:{line:25,column:43}},type:"binary-expr",locations:[{start:{line:25,column:8},end:{line:25,column:12}},{start:{line:25,column:16},end:{line:25,column:25}},{start:{line:25,column:29},end:{line:25,column:43}}],line:25},"5":{loc:{start:{line:26,column:4},end:{line:26,column:97}},type:"if",locations:[{start:{line:26,column:4},end:{line:26,column:97}},{start:{line:26,column:4},end:{line:26,column:97}}],line:26},"6":{loc:{start:{line:30,column:4},end:{line:32,column:5}},type:"if",locations:[{start:{line:30,column:4},end:{line:32,column:5}},{start:{line:30,column:4},end:{line:32,column:5}}],line:30},"7":{loc:{start:{line:44,column:29},end:{line:44,column:40}},type:"default-arg",locations:[{start:{line:44,column:38},end:{line:44,column:40}}],line:44},"8":{loc:{start:{line:45,column:33},end:{line:45,column:49}},type:"default-arg",locations:[{start:{line:45,column:45},end:{line:45,column:49}}],line:45},"9":{loc:{start:{line:46,column:4},end:{line:46,column:92}},type:"if",locations:[{start:{line:46,column:4},end:{line:46,column:92}},{start:{line:46,column:4},end:{line:46,column:92}}],line:46},"10":{loc:{start:{line:46,column:8},end:{line:46,column:34}},type:"binary-expr",locations:[{start:{line:46,column:8},end:{line:46,column:14}},{start:{line:46,column:18},end:{line:46,column:23}},{start:{line:46,column:27},end:{line:46,column:34}}],line:46}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0],"8":[0],"9":[0,0],"10":[0,0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"06c2ecf555e012b00fb791aa83b12985d71ba233"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1c0z5cemvg=function(){return actualCoverage;};}return actualCoverage;}cov_1c0z5cemvg();const axios=(cov_1c0z5cemvg().s[0]++,require('axios'));const errorResponse=(cov_1c0z5cemvg().s[1]++,require('../util').errorResponse);/**
 * Return a list of filepaths from a repository
 * @param {string} repoURL 
 * @param {object} options {fileType: string}
 * @return {string[]}
 * @throws throw error if the file list exceeds github api limit
 * 
 * example repoURL would be 'https://api.github.com/repos/grumbach/ft_ping/git/trees/master?recursive=1'
 * https://docs.github.com/en/rest/reference/git#get-a-tree
 */cov_1c0z5cemvg().s[2]++;const getRepoFilePaths=async(repoURL,options=(cov_1c0z5cemvg().b[0][0]++,{}))=>{cov_1c0z5cemvg().f[0]++;cov_1c0z5cemvg().s[3]++;if(!repoURL){cov_1c0z5cemvg().b[1][0]++;cov_1c0z5cemvg().s[4]++;throw new Error('Invalid repoURL');}else{cov_1c0z5cemvg().b[1][1]++;}const{ghPersonalAccessToken,fileType}=(cov_1c0z5cemvg().s[5]++,options);const headers=(cov_1c0z5cemvg().s[6]++,{'accept':'application/vnd.github.v3+json'});cov_1c0z5cemvg().s[7]++;if(ghPersonalAccessToken){cov_1c0z5cemvg().b[2][0]++;cov_1c0z5cemvg().s[8]++;headers['Authorization']=`Bearer ${ghPersonalAccessToken}`;}else{cov_1c0z5cemvg().b[2][1]++;}const res=(cov_1c0z5cemvg().s[9]++,await axios.get(repoURL,{headers,responseType:'json'}));cov_1c0z5cemvg().s[10]++;if((cov_1c0z5cemvg().b[4][0]++,!res)||(cov_1c0z5cemvg().b[4][1]++,!res.data)||(cov_1c0z5cemvg().b[4][2]++,!res.data.tree)){cov_1c0z5cemvg().b[3][0]++;cov_1c0z5cemvg().s[11]++;return[];}else{cov_1c0z5cemvg().b[3][1]++;}cov_1c0z5cemvg().s[12]++;if(res.truncated==true){cov_1c0z5cemvg().b[5][0]++;cov_1c0z5cemvg().s[13]++;throw new Error(errorResponse['EXCEED_GITHUB_TREE_LIMIT'].message);}else{cov_1c0z5cemvg().b[5][1]++;}let filePaths=(cov_1c0z5cemvg().s[14]++,res.data.tree.map(item=>{cov_1c0z5cemvg().f[1]++;cov_1c0z5cemvg().s[15]++;return item.path;}));cov_1c0z5cemvg().s[16]++;if(fileType){cov_1c0z5cemvg().b[6][0]++;cov_1c0z5cemvg().s[17]++;filePaths=filePaths.filter(path=>{cov_1c0z5cemvg().f[2]++;cov_1c0z5cemvg().s[18]++;return path.split('.').pop()===fileType;});}else{cov_1c0z5cemvg().b[6][1]++;}cov_1c0z5cemvg().s[19]++;return filePaths;};/**
 * Generate Github Endpoint for a tree object in the format of https://api.github.com/repos/[USER]/[REPO]/git/trees/[BRANCH]?recursive=1
 * @param {*} params {owner: string, repo: string, branch: string, recursive: string}
 * @returns string
 * 
 * example params would be { owner: 'grumbach', repo: 'ft_ping', branch: 'master', recursive: 'true' }
 * https://docs.github.com/en/rest/reference/git#get-a-tree
 */cov_1c0z5cemvg().s[20]++;const generateRepoTreeURL=(params=(cov_1c0z5cemvg().b[7][0]++,{}))=>{cov_1c0z5cemvg().f[3]++;const{owner,repo,branch,recursive=(cov_1c0z5cemvg().b[8][0]++,true)}=(cov_1c0z5cemvg().s[21]++,params);cov_1c0z5cemvg().s[22]++;if((cov_1c0z5cemvg().b[10][0]++,!owner)||(cov_1c0z5cemvg().b[10][1]++,!repo)||(cov_1c0z5cemvg().b[10][2]++,!branch)){cov_1c0z5cemvg().b[9][0]++;cov_1c0z5cemvg().s[23]++;throw new Error(errorResponse('MISSING_PARAMS').message);}else{cov_1c0z5cemvg().b[9][1]++;}cov_1c0z5cemvg().s[24]++;return`https://api.github.com/repos/${owner}/${repo}/git/trees/${branch}?recursive=${recursive}`;};cov_1c0z5cemvg().s[25]++;module.exports={getRepoFilePaths,generateRepoTreeURL};// TODO Use below to build test cases
// const repoURLV2 = generateTreeURL({ owner: 'grumbach', repo: 'ft_ping', branch: 'master' })
// getFileList(repoURLV2, { fileType: 'c' })
//     .then(paths => console.log(paths))
//     .catch(err => console.log(err))
// const repoURLV2 = generateTreeURL({ owner: 'CPSC-319', repo: 'TerraScanTestData', branch: 'main' })
// getFileList(repoURLV2, { fileType: 'tf' })
//     .then(paths => console.log(paths))
//     .catch(err => console.log(err))
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImF4aW9zIiwicmVxdWlyZSIsImVycm9yUmVzcG9uc2UiLCJnZXRSZXBvRmlsZVBhdGhzIiwicmVwb1VSTCIsIm9wdGlvbnMiLCJFcnJvciIsImdoUGVyc29uYWxBY2Nlc3NUb2tlbiIsImZpbGVUeXBlIiwiaGVhZGVycyIsInJlcyIsImdldCIsInJlc3BvbnNlVHlwZSIsImRhdGEiLCJ0cmVlIiwidHJ1bmNhdGVkIiwibWVzc2FnZSIsImZpbGVQYXRocyIsIm1hcCIsIml0ZW0iLCJwYXRoIiwiZmlsdGVyIiwic3BsaXQiLCJwb3AiLCJnZW5lcmF0ZVJlcG9UcmVlVVJMIiwicGFyYW1zIiwib3duZXIiLCJyZXBvIiwiYnJhbmNoIiwicmVjdXJzaXZlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IjJoS0FlWTsyRkFmWixLQUFNQSxDQUFBQSxLQUFLLDBCQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFWLENBQVgsQ0FDQSxLQUFNQyxDQUFBQSxhQUFhLDBCQUFHRCxPQUFPLENBQUMsU0FBRCxDQUFQLENBQW1CQyxhQUF0QixDQUFuQixDQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEcsd0JBQ0EsS0FBTUMsQ0FBQUEsZ0JBQWdCLENBQUcsTUFBT0MsT0FBUCxDQUFnQkMsT0FBTyw2QkFBRyxFQUFILENBQXZCLEdBQWlDLGlEQUN0RCxHQUFJLENBQUNELE9BQUwsQ0FBYyx5REFBTSxJQUFJRSxDQUFBQSxLQUFKLENBQVUsaUJBQVYsQ0FBTixDQUFrQyxDQUFoRCxpQ0FDQSxLQUFNLENBQUVDLHFCQUFGLENBQXlCQyxRQUF6QiwyQkFBc0NILE9BQXRDLENBQU4sQ0FFQSxLQUFNSSxDQUFBQSxPQUFPLDBCQUFHLENBQ1osU0FBVSxnQ0FERSxDQUFILENBQWIsQ0FKc0Qsd0JBT3RELEdBQUlGLHFCQUFKLENBQTJCLG9EQUN2QkUsT0FBTyxDQUFDLGVBQUQsQ0FBUCxDQUE0QixVQUFTRixxQkFBc0IsRUFBM0QsQ0FDSCxDQUZELGlDQUdBLEtBQU1HLENBQUFBLEdBQUcsMEJBQUcsS0FBTVYsQ0FBQUEsS0FBSyxDQUFDVyxHQUFOLENBQVVQLE9BQVYsQ0FBbUIsQ0FBRUssT0FBRixDQUFXRyxZQUFZLENBQUUsTUFBekIsQ0FBbkIsQ0FBVCxDQUFULENBVnNELHlCQVd0RCxHQUFJLDZCQUFDRixHQUFELCtCQUFRLENBQUNBLEdBQUcsQ0FBQ0csSUFBYiwrQkFBcUIsQ0FBQ0gsR0FBRyxDQUFDRyxJQUFKLENBQVNDLElBQS9CLENBQUosQ0FBeUMsMkRBQU8sRUFBUCxDQUFTLENBQWxELGlDQVhzRCx5QkFZdEQsR0FBSUosR0FBRyxDQUFDSyxTQUFKLEVBQWlCLElBQXJCLENBQTJCLDBEQUFNLElBQUlULENBQUFBLEtBQUosQ0FBVUosYUFBYSxDQUFDLDBCQUFELENBQWIsQ0FBMENjLE9BQXBELENBQU4sQ0FBa0UsQ0FBN0YsaUNBRUEsR0FBSUMsQ0FBQUEsU0FBUywyQkFBR1AsR0FBRyxDQUFDRyxJQUFKLENBQVNDLElBQVQsQ0FBY0ksR0FBZCxDQUFrQkMsSUFBSSxFQUFJLHdEQUFBQSxDQUFBQSxJQUFJLENBQUNDLElBQUwsQ0FBUyxDQUFuQyxDQUFILENBQWIsQ0Fkc0QseUJBZ0J0RCxHQUFJWixRQUFKLENBQWMscURBQ1ZTLFNBQVMsQ0FBR0EsU0FBUyxDQUFDSSxNQUFWLENBQWlCRCxJQUFJLEVBQUksd0RBQUFBLENBQUFBLElBQUksQ0FBQ0UsS0FBTCxDQUFXLEdBQVgsRUFBZ0JDLEdBQWhCLEtBQTBCZixRQUExQixDQUFrQyxDQUEzRCxDQUFaLENBQ0gsQ0FGRCxpQ0FoQnNELHlCQW1CdEQsTUFBT1MsQ0FBQUEsU0FBUCxDQUNILENBcEJELENBc0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRyx5QkFDQSxLQUFNTyxDQUFBQSxtQkFBbUIsQ0FBRyxDQUFDQyxNQUFNLDZCQUFHLEVBQUgsQ0FBUCxHQUFpQix5QkFDekMsS0FBTSxDQUFFQyxLQUFGLENBQVNDLElBQVQsQ0FBZUMsTUFBZixDQUF1QkMsU0FBUyw2QkFBRyxJQUFILENBQWhDLDRCQUE0Q0osTUFBNUMsQ0FBTixDQUR5Qyx5QkFFekMsR0FBSSw4QkFBQ0MsS0FBRCxnQ0FBVSxDQUFDQyxJQUFYLGdDQUFtQixDQUFDQyxNQUFwQixDQUFKLENBQWdDLDBEQUFNLElBQUl0QixDQUFBQSxLQUFKLENBQVVKLGFBQWEsQ0FBQyxnQkFBRCxDQUFiLENBQWdDYyxPQUExQyxDQUFOLENBQXdELENBQXhGLGlDQUZ5Qyx5QkFHekMsTUFBUSxnQ0FBK0JVLEtBQU0sSUFBR0MsSUFBSyxjQUFhQyxNQUFPLGNBQWFDLFNBQVUsRUFBaEcsQ0FDSCxDQUpELEMseUJBTUFDLE1BQU0sQ0FBQ0MsT0FBUCxDQUFpQixDQUNiNUIsZ0JBRGEsQ0FFYnFCLG1CQUZhLENBQWpCLENBS0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYXhpb3MgPSByZXF1aXJlKCdheGlvcycpXG5jb25zdCBlcnJvclJlc3BvbnNlID0gcmVxdWlyZSgnLi4vdXRpbCcpLmVycm9yUmVzcG9uc2VcblxuLyoqXG4gKiBSZXR1cm4gYSBsaXN0IG9mIGZpbGVwYXRocyBmcm9tIGEgcmVwb3NpdG9yeVxuICogQHBhcmFtIHtzdHJpbmd9IHJlcG9VUkwgXG4gKiBAcGFyYW0ge29iamVjdH0gb3B0aW9ucyB7ZmlsZVR5cGU6IHN0cmluZ31cbiAqIEByZXR1cm4ge3N0cmluZ1tdfVxuICogQHRocm93cyB0aHJvdyBlcnJvciBpZiB0aGUgZmlsZSBsaXN0IGV4Y2VlZHMgZ2l0aHViIGFwaSBsaW1pdFxuICogXG4gKiBleGFtcGxlIHJlcG9VUkwgd291bGQgYmUgJ2h0dHBzOi8vYXBpLmdpdGh1Yi5jb20vcmVwb3MvZ3J1bWJhY2gvZnRfcGluZy9naXQvdHJlZXMvbWFzdGVyP3JlY3Vyc2l2ZT0xJ1xuICogaHR0cHM6Ly9kb2NzLmdpdGh1Yi5jb20vZW4vcmVzdC9yZWZlcmVuY2UvZ2l0I2dldC1hLXRyZWVcbiAqL1xuY29uc3QgZ2V0UmVwb0ZpbGVQYXRocyA9IGFzeW5jIChyZXBvVVJMLCBvcHRpb25zID0ge30pID0+IHtcbiAgICBpZiAoIXJlcG9VUkwpIHRocm93IG5ldyBFcnJvcignSW52YWxpZCByZXBvVVJMJylcbiAgICBjb25zdCB7IGdoUGVyc29uYWxBY2Nlc3NUb2tlbiwgZmlsZVR5cGUgfSA9IG9wdGlvbnNcblxuICAgIGNvbnN0IGhlYWRlcnMgPSB7XG4gICAgICAgICdhY2NlcHQnOiAnYXBwbGljYXRpb24vdm5kLmdpdGh1Yi52Mytqc29uJ1xuICAgIH1cbiAgICBpZiAoZ2hQZXJzb25hbEFjY2Vzc1Rva2VuKSB7XG4gICAgICAgIGhlYWRlcnNbJ0F1dGhvcml6YXRpb24nXSA9IGBCZWFyZXIgJHtnaFBlcnNvbmFsQWNjZXNzVG9rZW59YFxuICAgIH1cbiAgICBjb25zdCByZXMgPSBhd2FpdCBheGlvcy5nZXQocmVwb1VSTCwgeyBoZWFkZXJzLCByZXNwb25zZVR5cGU6ICdqc29uJyB9KVxuICAgIGlmICghcmVzIHx8ICFyZXMuZGF0YSB8fCAhcmVzLmRhdGEudHJlZSkgcmV0dXJuIFtdXG4gICAgaWYgKHJlcy50cnVuY2F0ZWQgPT0gdHJ1ZSkgdGhyb3cgbmV3IEVycm9yKGVycm9yUmVzcG9uc2VbJ0VYQ0VFRF9HSVRIVUJfVFJFRV9MSU1JVCddLm1lc3NhZ2UpXG5cbiAgICBsZXQgZmlsZVBhdGhzID0gcmVzLmRhdGEudHJlZS5tYXAoaXRlbSA9PiBpdGVtLnBhdGgpXG5cbiAgICBpZiAoZmlsZVR5cGUpIHtcbiAgICAgICAgZmlsZVBhdGhzID0gZmlsZVBhdGhzLmZpbHRlcihwYXRoID0+IHBhdGguc3BsaXQoJy4nKS5wb3AoKSA9PT0gZmlsZVR5cGUpXG4gICAgfVxuICAgIHJldHVybiBmaWxlUGF0aHNcbn1cblxuLyoqXG4gKiBHZW5lcmF0ZSBHaXRodWIgRW5kcG9pbnQgZm9yIGEgdHJlZSBvYmplY3QgaW4gdGhlIGZvcm1hdCBvZiBodHRwczovL2FwaS5naXRodWIuY29tL3JlcG9zL1tVU0VSXS9bUkVQT10vZ2l0L3RyZWVzL1tCUkFOQ0hdP3JlY3Vyc2l2ZT0xXG4gKiBAcGFyYW0geyp9IHBhcmFtcyB7b3duZXI6IHN0cmluZywgcmVwbzogc3RyaW5nLCBicmFuY2g6IHN0cmluZywgcmVjdXJzaXZlOiBzdHJpbmd9XG4gKiBAcmV0dXJucyBzdHJpbmdcbiAqIFxuICogZXhhbXBsZSBwYXJhbXMgd291bGQgYmUgeyBvd25lcjogJ2dydW1iYWNoJywgcmVwbzogJ2Z0X3BpbmcnLCBicmFuY2g6ICdtYXN0ZXInLCByZWN1cnNpdmU6ICd0cnVlJyB9XG4gKiBodHRwczovL2RvY3MuZ2l0aHViLmNvbS9lbi9yZXN0L3JlZmVyZW5jZS9naXQjZ2V0LWEtdHJlZVxuICovXG5jb25zdCBnZW5lcmF0ZVJlcG9UcmVlVVJMID0gKHBhcmFtcyA9IHt9KSA9PiB7XG4gICAgY29uc3QgeyBvd25lciwgcmVwbywgYnJhbmNoLCByZWN1cnNpdmUgPSB0cnVlIH0gPSBwYXJhbXNcbiAgICBpZiAoIW93bmVyIHx8ICFyZXBvIHx8ICFicmFuY2gpIHRocm93IG5ldyBFcnJvcihlcnJvclJlc3BvbnNlKCdNSVNTSU5HX1BBUkFNUycpLm1lc3NhZ2UpXG4gICAgcmV0dXJuIGBodHRwczovL2FwaS5naXRodWIuY29tL3JlcG9zLyR7b3duZXJ9LyR7cmVwb30vZ2l0L3RyZWVzLyR7YnJhbmNofT9yZWN1cnNpdmU9JHtyZWN1cnNpdmV9YFxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBnZXRSZXBvRmlsZVBhdGhzLFxuICAgIGdlbmVyYXRlUmVwb1RyZWVVUkxcbn1cblxuLy8gVE9ETyBVc2UgYmVsb3cgdG8gYnVpbGQgdGVzdCBjYXNlc1xuXG4vLyBjb25zdCByZXBvVVJMVjIgPSBnZW5lcmF0ZVRyZWVVUkwoeyBvd25lcjogJ2dydW1iYWNoJywgcmVwbzogJ2Z0X3BpbmcnLCBicmFuY2g6ICdtYXN0ZXInIH0pXG4vLyBnZXRGaWxlTGlzdChyZXBvVVJMVjIsIHsgZmlsZVR5cGU6ICdjJyB9KVxuLy8gICAgIC50aGVuKHBhdGhzID0+IGNvbnNvbGUubG9nKHBhdGhzKSlcbi8vICAgICAuY2F0Y2goZXJyID0+IGNvbnNvbGUubG9nKGVycikpXG5cbi8vIGNvbnN0IHJlcG9VUkxWMiA9IGdlbmVyYXRlVHJlZVVSTCh7IG93bmVyOiAnQ1BTQy0zMTknLCByZXBvOiAnVGVycmFTY2FuVGVzdERhdGEnLCBicmFuY2g6ICdtYWluJyB9KVxuLy8gZ2V0RmlsZUxpc3QocmVwb1VSTFYyLCB7IGZpbGVUeXBlOiAndGYnIH0pXG4vLyAgICAgLnRoZW4ocGF0aHMgPT4gY29uc29sZS5sb2cocGF0aHMpKVxuLy8gICAgIC5jYXRjaChlcnIgPT4gY29uc29sZS5sb2coZXJyKSkiXX0=