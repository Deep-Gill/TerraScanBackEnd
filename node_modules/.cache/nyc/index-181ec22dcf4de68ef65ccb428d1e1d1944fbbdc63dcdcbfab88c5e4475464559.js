function cov_1npk8iqg5k(){var path="/Users/deepgill/CPSC-319/TerraScanBackEnd/amplify/backend/function/webhook/src/sh/index.js";var hash="f8302844547c0f7e7da74bcf357112c60a4b19cd";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/deepgill/CPSC-319/TerraScanBackEnd/amplify/backend/function/webhook/src/sh/index.js",statementMap:{"0":{start:{line:1,column:13},end:{line:1,column:42}},"1":{start:{line:18,column:38},end:{line:22,column:9}},"2":{start:{line:19,column:12},end:{line:21,column:14}},"3":{start:{line:20,column:16},end:{line:20,column:56}},"4":{start:{line:24,column:26},end:{line:24,column:32}},"5":{start:{line:25,column:8},end:{line:40,column:10}},"6":{start:{line:26,column:12},end:{line:39,column:14}},"7":{start:{line:27,column:16},end:{line:29,column:17}},"8":{start:{line:28,column:20},end:{line:28,column:45}},"9":{start:{line:30,column:16},end:{line:38,column:17}},"10":{start:{line:31,column:20},end:{line:31,column:31}},"11":{start:{line:33,column:20},end:{line:36,column:21}},"12":{start:{line:34,column:24},end:{line:34,column:53}},"13":{start:{line:35,column:24},end:{line:35,column:53}},"14":{start:{line:37,column:20},end:{line:37,column:47}},"15":{start:{line:44,column:0},end:{line:46,column:1}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:13,column:4},end:{line:13,column:5}},loc:{start:{line:13,column:40},end:{line:41,column:5}},line:13},"1":{name:"(anonymous_1)",decl:{start:{line:18,column:38},end:{line:18,column:39}},loc:{start:{line:18,column:54},end:{line:22,column:9}},line:18},"2":{name:"(anonymous_2)",decl:{start:{line:19,column:43},end:{line:19,column:44}},loc:{start:{line:19,column:53},end:{line:21,column:13}},line:19},"3":{name:"(anonymous_3)",decl:{start:{line:25,column:27},end:{line:25,column:28}},loc:{start:{line:25,column:48},end:{line:40,column:9}},line:25},"4":{name:"(anonymous_4)",decl:{start:{line:26,column:22},end:{line:26,column:23}},loc:{start:{line:26,column:47},end:{line:39,column:13}},line:26}},branchMap:{"0":{loc:{start:{line:13,column:27},end:{line:13,column:38}},type:"default-arg",locations:[{start:{line:13,column:36},end:{line:13,column:38}}],line:13},"1":{loc:{start:{line:20,column:16},end:{line:20,column:56}},type:"cond-expr",locations:[{start:{line:20,column:23},end:{line:20,column:49}},{start:{line:20,column:52},end:{line:20,column:56}}],line:20},"2":{loc:{start:{line:27,column:16},end:{line:29,column:17}},type:"if",locations:[{start:{line:27,column:16},end:{line:29,column:17}},{start:{line:27,column:16},end:{line:29,column:17}}],line:27},"3":{loc:{start:{line:30,column:16},end:{line:38,column:17}},type:"if",locations:[{start:{line:30,column:16},end:{line:38,column:17}},{start:{line:30,column:16},end:{line:38,column:17}}],line:30},"4":{loc:{start:{line:33,column:20},end:{line:36,column:21}},type:"if",locations:[{start:{line:33,column:20},end:{line:36,column:21}},{start:{line:33,column:20},end:{line:36,column:21}}],line:33}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{"0":[0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"f8302844547c0f7e7da74bcf357112c60a4b19cd"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1npk8iqg5k=function(){return actualCoverage;};}return actualCoverage;}cov_1npk8iqg5k();const exec=(cov_1npk8iqg5k().s[0]++,require('child_process').exec);class shHelper{/**
     * Execute simple shell command (async wrapper). Logs will be printed.
     * @param {String} cmd
     * @param {Object} options {debug: boolean}
     * @return {Object} { stdout: String, stderr: String }
     *
     * Ref:
     * -  https://stackoverflow.com/a/31897900/16961611
     */static async exec(cmd,option=(cov_1npk8iqg5k().b[0][0]++,{})){cov_1npk8iqg5k().f[0]++;cov_1npk8iqg5k().s[1]++;/**
         * Split the string by new lines and print each line
         * @param {String} consoleStr
         */const printShCommandConsole=consoleStr=>{cov_1npk8iqg5k().f[1]++;cov_1npk8iqg5k().s[2]++;consoleStr.split('\n').forEach(line=>{cov_1npk8iqg5k().f[2]++;cov_1npk8iqg5k().s[3]++;line?(cov_1npk8iqg5k().b[1][0]++,console.log(`sh: ${line}`)):(cov_1npk8iqg5k().b[1][1]++,null);});};const{debug}=(cov_1npk8iqg5k().s[4]++,option);cov_1npk8iqg5k().s[5]++;return new Promise((resolve,reject)=>{cov_1npk8iqg5k().f[3]++;cov_1npk8iqg5k().s[6]++;exec(cmd,(err,stdout,stderr)=>{cov_1npk8iqg5k().f[4]++;cov_1npk8iqg5k().s[7]++;if(debug){cov_1npk8iqg5k().b[2][0]++;cov_1npk8iqg5k().s[8]++;console.log(`sh: ${cmd}`);}else{cov_1npk8iqg5k().b[2][1]++;}cov_1npk8iqg5k().s[9]++;if(err){cov_1npk8iqg5k().b[3][0]++;cov_1npk8iqg5k().s[10]++;reject(err);}else{cov_1npk8iqg5k().b[3][1]++;cov_1npk8iqg5k().s[11]++;if(debug){cov_1npk8iqg5k().b[4][0]++;cov_1npk8iqg5k().s[12]++;printShCommandConsole(stdout);cov_1npk8iqg5k().s[13]++;printShCommandConsole(stderr);}else{cov_1npk8iqg5k().b[4][1]++;}cov_1npk8iqg5k().s[14]++;resolve({stdout,stderr});}});});}}cov_1npk8iqg5k().s[15]++;module.exports={shHelper};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4ZWMiLCJyZXF1aXJlIiwic2hIZWxwZXIiLCJjbWQiLCJvcHRpb24iLCJwcmludFNoQ29tbWFuZENvbnNvbGUiLCJjb25zb2xlU3RyIiwic3BsaXQiLCJmb3JFYWNoIiwibGluZSIsImNvbnNvbGUiLCJsb2ciLCJkZWJ1ZyIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwiZXJyIiwic3Rkb3V0Iiwic3RkZXJyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6ImkyR0FlWTsyRkFmWixLQUFNQSxDQUFBQSxJQUFJLDBCQUFHQyxPQUFPLENBQUMsZUFBRCxDQUFQLENBQXlCRCxJQUE1QixDQUFWLENBRUEsS0FBTUUsQ0FBQUEsUUFBUyxDQUNYO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUNxQixZQUFKRixDQUFBQSxJQUFJLENBQUNHLEdBQUQsQ0FBTUMsTUFBTSw2QkFBRyxFQUFILENBQVosQ0FBbUIsaURBQ2hDO0FBQ1I7QUFDQTtBQUNBLFdBQ1EsS0FBTUMsQ0FBQUEscUJBQXFCLENBQUlDLFVBQUQsRUFBZ0IsaURBQzFDQSxVQUFVLENBQUNDLEtBQVgsQ0FBaUIsSUFBakIsRUFBdUJDLE9BQXZCLENBQWdDQyxJQUFELEVBQVUsaURBQ3JDQSxJQUFJLDZCQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBYSxPQUFNRixJQUFLLEVBQXhCLENBQUgsOEJBQWdDLElBQWhDLENBQUosQ0FDSCxDQUZELEVBR0gsQ0FKRCxDQU1BLEtBQU0sQ0FBRUcsS0FBRiwyQkFBWVIsTUFBWixDQUFOLENBWGdDLHdCQVloQyxNQUFPLElBQUlTLENBQUFBLE9BQUosQ0FBWSxDQUFDQyxPQUFELENBQVVDLE1BQVYsR0FBcUIsaURBQ3BDZixJQUFJLENBQUNHLEdBQUQsQ0FBTSxDQUFDYSxHQUFELENBQU1DLE1BQU4sQ0FBY0MsTUFBZCxHQUF5QixpREFDL0IsR0FBSU4sS0FBSixDQUFXLG9EQUNQRixPQUFPLENBQUNDLEdBQVIsQ0FBYSxPQUFNUixHQUFJLEVBQXZCLEVBQ0gsQ0FGRCxpQ0FEK0Isd0JBSS9CLEdBQUlhLEdBQUosQ0FBUyxxREFDTEQsTUFBTSxDQUFDQyxHQUFELENBQU4sQ0FDSCxDQUZELElBRU8scURBQ0gsR0FBSUosS0FBSixDQUFXLHFEQUNQUCxxQkFBcUIsQ0FBQ1ksTUFBRCxDQUFyQixDQURPLHlCQUVQWixxQkFBcUIsQ0FBQ2EsTUFBRCxDQUFyQixDQUNILENBSEQsaUNBREcseUJBS0hKLE9BQU8sQ0FBQyxDQUFFRyxNQUFGLENBQVVDLE1BQVYsQ0FBRCxDQUFQLENBQ0gsQ0FDSixDQWJHLENBQUosQ0FjSCxDQWZNLENBQVAsQ0FnQkgsQ0F0Q1UsQyx5QkF5Q2ZDLE1BQU0sQ0FBQ0MsT0FBUCxDQUFpQixDQUNibEIsUUFEYSxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4ZWMgPSByZXF1aXJlKCdjaGlsZF9wcm9jZXNzJykuZXhlY1xuXG5jbGFzcyBzaEhlbHBlciB7XG4gICAgLyoqXG4gICAgICogRXhlY3V0ZSBzaW1wbGUgc2hlbGwgY29tbWFuZCAoYXN5bmMgd3JhcHBlcikuIExvZ3Mgd2lsbCBiZSBwcmludGVkLlxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBjbWRcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucyB7ZGVidWc6IGJvb2xlYW59XG4gICAgICogQHJldHVybiB7T2JqZWN0fSB7IHN0ZG91dDogU3RyaW5nLCBzdGRlcnI6IFN0cmluZyB9XG4gICAgICpcbiAgICAgKiBSZWY6XG4gICAgICogLSAgaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9hLzMxODk3OTAwLzE2OTYxNjExXG4gICAgICovXG4gICAgc3RhdGljIGFzeW5jIGV4ZWMoY21kLCBvcHRpb24gPSB7fSkge1xuICAgICAgICAvKipcbiAgICAgICAgICogU3BsaXQgdGhlIHN0cmluZyBieSBuZXcgbGluZXMgYW5kIHByaW50IGVhY2ggbGluZVxuICAgICAgICAgKiBAcGFyYW0ge1N0cmluZ30gY29uc29sZVN0clxuICAgICAgICAgKi9cbiAgICAgICAgY29uc3QgcHJpbnRTaENvbW1hbmRDb25zb2xlID0gKGNvbnNvbGVTdHIpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGVTdHIuc3BsaXQoJ1xcbicpLmZvckVhY2goKGxpbmUpID0+IHtcbiAgICAgICAgICAgICAgICBsaW5lID8gY29uc29sZS5sb2coYHNoOiAke2xpbmV9YCkgOiBudWxsXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgeyBkZWJ1ZyB9ID0gb3B0aW9uXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICBleGVjKGNtZCwgKGVyciwgc3Rkb3V0LCBzdGRlcnIpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoZGVidWcpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coYHNoOiAke2NtZH1gKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChlcnIpXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRlYnVnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwcmludFNoQ29tbWFuZENvbnNvbGUoc3Rkb3V0KVxuICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnRTaENvbW1hbmRDb25zb2xlKHN0ZGVycilcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHsgc3Rkb3V0LCBzdGRlcnIgfSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgc2hIZWxwZXJcbn0iXX0=